name: Apollo Rover Persisted Queries Publish
description: Runs the `rover persisted-queries publish` command
author: Apollo GraphQL
branding:
  icon: terminal
  color: blue

inputs:
  # required
  apollo-key:
    description: Your Apollo Studio API key
    required: true
  
  # one of the two input blocks must be provided; if both are provided, `graph-ref` takes precedence
  # the graph-ref option looks up the existing persisted query manifest associated with the variant
  graph-ref:
    description: The <NAME>@<VARIANT> of graph in Apollo Studio
  # you can alternatively provide the graph ID and list ID to publish the persisted query manifest
  graph-id: 
    description: The ID of the graph in Apollo Studio
  list-id:
    description: The ID of the persisted queries list in Apollo Studio

  manifest:
    description:  The path to the persisted queries manifest file
    required: true

  # optional
  manifest-format:
    description: The format of the persisted queries manifest file [apollo|relay]

  for-client-name:
    description: If provided, overrides the `clientName` field in all operations in the manifest file

  # common
  log:
    description: Specify Rover's log level
  format:
    description: Specify Rover's log format type [plain|json]
  client-timeout:
    description: Configure the timeout length (in seconds) when performing HTTP(S) requests

runs:
  using: composite
  steps:
    - env:
        APOLLO_KEY: ${{ inputs.apollo-key }}
      run: |
        if [[ -z "${{ inputs.graph-ref }}" ]] && { [[ -z "${{ inputs.graph-id }}" ]] || [[ -z "${{inputs.list-id}}" ]]; }; then
          echo "Error: Either 'graph-ref' or both 'graph-id' and 'list-id' must be provided."
          exit 1
        fi

        ARGS=()
        if [[ -n "${{ inputs.graph-ref }}" ]] ; then
          ARGS+=(${{ inputs.graph-ref }})
        else
          ARGS+=(--graph-id ${{ inputs.graph-id }})
          ARGS+=(--list-id ${{ inputs.list-id }})
        fi

        ARGS+=(--manifest ${{ inputs.manifest }} --skip-update-check)

        [ -n "${{ inputs.manifest-format }}" ] && ARGS+=(--manifest-format ${{ inputs.manifest-format }})
        [ -n "${{ inputs.for-client-name }}" ] && ARGS+=(--for-client-name ${{ inputs.for-client-name }})
        
        [ -n "${{ inputs.log }}" ] && ARGS+=(--log ${{ inputs.log }})
        [ -n "${{ inputs.format }}" ] && ARGS+=(--format ${{ inputs.format }})
        [ -n "${{ inputs.client-timeout }}" ] && ARGS+=(--client-timeout ${{ inputs.client-timeout }})

        rover persisted-queries publish ${ARGS[@]}
      shell: bash
